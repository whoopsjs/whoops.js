Defence against the dark arts: testing.js
All workers have finished.
Problems:
[]
Graph:
{ type: 'Program',
  start: 0,
  end: 167,
  body:
   [ { type: 'VariableDeclaration',
       start: 0,
       end: 39,
       declarations:
        [ { type: 'VariableDeclarator',
            start: 4,
            end: 38,
            id: { type: 'Identifier', start: 4, end: 10, name: 'input1' },
            init:
             { type: 'CallExpression',
               start: 13,
               end: 38,
               callee: { type: 'Identifier', start: 13, end: 19, name: 'prompt' },
               arguments:
                [ { type: 'Literal',
                    start: 20,
                    end: 37,
                    value: 'Evil Dom Input!',
                    raw: '\'Evil Dom Input!\'' } ] } } ],
       kind: 'var',
       previous: [],
       next:
        [ { type: 'VariableDeclaration',
            start: 41,
            end: 83,
            declarations:
             [ { type: 'VariableDeclarator',
                 start: 45,
                 end: 82,
                 id: { type: 'Identifier', start: 45, end: 49, name: 'span' },
                 init:
                  { type: 'CallExpression',
                    start: 52,
                    end: 82,
                    callee:
                     { type: 'MemberExpression',
                       start: 52,
                       end: 74,
                       object: { type: 'Identifier', start: 52, end: 60, name: 'document' },
                       property: { type: 'Identifier', start: 61, end: 74, name: 'createElement' },
                       computed: false },
                    arguments:
                     [ { type: 'Literal',
                         start: 75,
                         end: 81,
                         value: 'span',
                         raw: '"span"' } ] } } ],
            kind: 'var',
            previous: [ [Circular] ],
            next:
             [ { type: 'ExpressionStatement',
                 start: 84,
                 end: 134,
                 expression:
                  { type: 'CallExpression',
                    start: 84,
                    end: 133,
                    callee:
                     { type: 'MemberExpression',
                       start: 84,
                       end: 100,
                       object: { type: 'Identifier', start: 84, end: 88, name: 'span' },
                       property: { type: 'Identifier', start: 89, end: 100, name: 'appendChild' },
                       computed: false },
                    arguments:
                     [ { type: 'CallExpression',
                         start: 101,
                         end: 132,
                         callee:
                          { type: 'MemberExpression',
                            start: 101,
                            end: 124,
                            object: { type: 'Identifier', start: 101, end: 109, name: 'document' },
                            property:
                             { type: 'Identifier',
                               start: 110,
                               end: 124,
                               name: 'createTextNode' },
                            computed: false },
                         arguments: [ { type: 'Identifier', start: 125, end: 131, name: 'input1' } ] } ] },
                 previous: [ [Circular] ],
                 next:
                  [ { type: 'ExpressionStatement',
                      start: 135,
                      end: 167,
                      expression:
                       { type: 'CallExpression',
                         start: 135,
                         end: 166,
                         callee:
                          { type: 'MemberExpression',
                            start: 135,
                            end: 160,
                            object:
                             { type: 'MemberExpression',
                               start: 135,
                               end: 148,
                               object: { type: 'Identifier', start: 135, end: 143, name: 'document' },
                               property: { type: 'Identifier', start: 144, end: 148, name: 'body' },
                               computed: false },
                            property: { type: 'Identifier', start: 149, end: 160, name: 'appendChild' },
                            computed: false },
                         arguments: [ { type: 'Identifier', start: 161, end: 165, name: 'span' } ] },
                      previous: [ [Circular] ],
                      next: [] } ] } ] } ] },
     { type: 'VariableDeclaration',
       start: 41,
       end: 83,
       declarations:
        [ { type: 'VariableDeclarator',
            start: 45,
            end: 82,
            id: { type: 'Identifier', start: 45, end: 49, name: 'span' },
            init:
             { type: 'CallExpression',
               start: 52,
               end: 82,
               callee:
                { type: 'MemberExpression',
                  start: 52,
                  end: 74,
                  object: { type: 'Identifier', start: 52, end: 60, name: 'document' },
                  property: { type: 'Identifier', start: 61, end: 74, name: 'createElement' },
                  computed: false },
               arguments:
                [ { type: 'Literal',
                    start: 75,
                    end: 81,
                    value: 'span',
                    raw: '"span"' } ] } } ],
       kind: 'var',
       previous:
        [ { type: 'VariableDeclaration',
            start: 0,
            end: 39,
            declarations:
             [ { type: 'VariableDeclarator',
                 start: 4,
                 end: 38,
                 id: { type: 'Identifier', start: 4, end: 10, name: 'input1' },
                 init:
                  { type: 'CallExpression',
                    start: 13,
                    end: 38,
                    callee: { type: 'Identifier', start: 13, end: 19, name: 'prompt' },
                    arguments:
                     [ { type: 'Literal',
                         start: 20,
                         end: 37,
                         value: 'Evil Dom Input!',
                         raw: '\'Evil Dom Input!\'' } ] } } ],
            kind: 'var',
            previous: [],
            next: [ [Circular] ] } ],
       next:
        [ { type: 'ExpressionStatement',
            start: 84,
            end: 134,
            expression:
             { type: 'CallExpression',
               start: 84,
               end: 133,
               callee:
                { type: 'MemberExpression',
                  start: 84,
                  end: 100,
                  object: { type: 'Identifier', start: 84, end: 88, name: 'span' },
                  property: { type: 'Identifier', start: 89, end: 100, name: 'appendChild' },
                  computed: false },
               arguments:
                [ { type: 'CallExpression',
                    start: 101,
                    end: 132,
                    callee:
                     { type: 'MemberExpression',
                       start: 101,
                       end: 124,
                       object: { type: 'Identifier', start: 101, end: 109, name: 'document' },
                       property:
                        { type: 'Identifier',
                          start: 110,
                          end: 124,
                          name: 'createTextNode' },
                       computed: false },
                    arguments: [ { type: 'Identifier', start: 125, end: 131, name: 'input1' } ] } ] },
            previous: [ [Circular] ],
            next:
             [ { type: 'ExpressionStatement',
                 start: 135,
                 end: 167,
                 expression:
                  { type: 'CallExpression',
                    start: 135,
                    end: 166,
                    callee:
                     { type: 'MemberExpression',
                       start: 135,
                       end: 160,
                       object:
                        { type: 'MemberExpression',
                          start: 135,
                          end: 148,
                          object: { type: 'Identifier', start: 135, end: 143, name: 'document' },
                          property: { type: 'Identifier', start: 144, end: 148, name: 'body' },
                          computed: false },
                       property: { type: 'Identifier', start: 149, end: 160, name: 'appendChild' },
                       computed: false },
                    arguments: [ { type: 'Identifier', start: 161, end: 165, name: 'span' } ] },
                 previous: [ [Circular] ],
                 next: [] } ] } ] },
     { type: 'ExpressionStatement',
       start: 84,
       end: 134,
       expression:
        { type: 'CallExpression',
          start: 84,
          end: 133,
          callee:
           { type: 'MemberExpression',
             start: 84,
             end: 100,
             object: { type: 'Identifier', start: 84, end: 88, name: 'span' },
             property: { type: 'Identifier', start: 89, end: 100, name: 'appendChild' },
             computed: false },
          arguments:
           [ { type: 'CallExpression',
               start: 101,
               end: 132,
               callee:
                { type: 'MemberExpression',
                  start: 101,
                  end: 124,
                  object: { type: 'Identifier', start: 101, end: 109, name: 'document' },
                  property:
                   { type: 'Identifier',
                     start: 110,
                     end: 124,
                     name: 'createTextNode' },
                  computed: false },
               arguments: [ { type: 'Identifier', start: 125, end: 131, name: 'input1' } ] } ] },
       previous:
        [ { type: 'VariableDeclaration',
            start: 41,
            end: 83,
            declarations:
             [ { type: 'VariableDeclarator',
                 start: 45,
                 end: 82,
                 id: { type: 'Identifier', start: 45, end: 49, name: 'span' },
                 init:
                  { type: 'CallExpression',
                    start: 52,
                    end: 82,
                    callee:
                     { type: 'MemberExpression',
                       start: 52,
                       end: 74,
                       object: { type: 'Identifier', start: 52, end: 60, name: 'document' },
                       property: { type: 'Identifier', start: 61, end: 74, name: 'createElement' },
                       computed: false },
                    arguments:
                     [ { type: 'Literal',
                         start: 75,
                         end: 81,
                         value: 'span',
                         raw: '"span"' } ] } } ],
            kind: 'var',
            previous:
             [ { type: 'VariableDeclaration',
                 start: 0,
                 end: 39,
                 declarations:
                  [ { type: 'VariableDeclarator',
                      start: 4,
                      end: 38,
                      id: { type: 'Identifier', start: 4, end: 10, name: 'input1' },
                      init:
                       { type: 'CallExpression',
                         start: 13,
                         end: 38,
                         callee: { type: 'Identifier', start: 13, end: 19, name: 'prompt' },
                         arguments:
                          [ { type: 'Literal',
                              start: 20,
                              end: 37,
                              value: 'Evil Dom Input!',
                              raw: '\'Evil Dom Input!\'' } ] } } ],
                 kind: 'var',
                 previous: [],
                 next: [ [Circular] ] } ],
            next: [ [Circular] ] } ],
       next:
        [ { type: 'ExpressionStatement',
            start: 135,
            end: 167,
            expression:
             { type: 'CallExpression',
               start: 135,
               end: 166,
               callee:
                { type: 'MemberExpression',
                  start: 135,
                  end: 160,
                  object:
                   { type: 'MemberExpression',
                     start: 135,
                     end: 148,
                     object: { type: 'Identifier', start: 135, end: 143, name: 'document' },
                     property: { type: 'Identifier', start: 144, end: 148, name: 'body' },
                     computed: false },
                  property: { type: 'Identifier', start: 149, end: 160, name: 'appendChild' },
                  computed: false },
               arguments: [ { type: 'Identifier', start: 161, end: 165, name: 'span' } ] },
            previous: [ [Circular] ],
            next: [] } ] },
     { type: 'ExpressionStatement',
       start: 135,
       end: 167,
       expression:
        { type: 'CallExpression',
          start: 135,
          end: 166,
          callee:
           { type: 'MemberExpression',
             start: 135,
             end: 160,
             object:
              { type: 'MemberExpression',
                start: 135,
                end: 148,
                object: { type: 'Identifier', start: 135, end: 143, name: 'document' },
                property: { type: 'Identifier', start: 144, end: 148, name: 'body' },
                computed: false },
             property: { type: 'Identifier', start: 149, end: 160, name: 'appendChild' },
             computed: false },
          arguments: [ { type: 'Identifier', start: 161, end: 165, name: 'span' } ] },
       previous:
        [ { type: 'ExpressionStatement',
            start: 84,
            end: 134,
            expression:
             { type: 'CallExpression',
               start: 84,
               end: 133,
               callee:
                { type: 'MemberExpression',
                  start: 84,
                  end: 100,
                  object: { type: 'Identifier', start: 84, end: 88, name: 'span' },
                  property: { type: 'Identifier', start: 89, end: 100, name: 'appendChild' },
                  computed: false },
               arguments:
                [ { type: 'CallExpression',
                    start: 101,
                    end: 132,
                    callee:
                     { type: 'MemberExpression',
                       start: 101,
                       end: 124,
                       object: { type: 'Identifier', start: 101, end: 109, name: 'document' },
                       property:
                        { type: 'Identifier',
                          start: 110,
                          end: 124,
                          name: 'createTextNode' },
                       computed: false },
                    arguments: [ { type: 'Identifier', start: 125, end: 131, name: 'input1' } ] } ] },
            previous:
             [ { type: 'VariableDeclaration',
                 start: 41,
                 end: 83,
                 declarations:
                  [ { type: 'VariableDeclarator',
                      start: 45,
                      end: 82,
                      id: { type: 'Identifier', start: 45, end: 49, name: 'span' },
                      init:
                       { type: 'CallExpression',
                         start: 52,
                         end: 82,
                         callee:
                          { type: 'MemberExpression',
                            start: 52,
                            end: 74,
                            object: { type: 'Identifier', start: 52, end: 60, name: 'document' },
                            property: { type: 'Identifier', start: 61, end: 74, name: 'createElement' },
                            computed: false },
                         arguments:
                          [ { type: 'Literal',
                              start: 75,
                              end: 81,
                              value: 'span',
                              raw: '"span"' } ] } } ],
                 kind: 'var',
                 previous:
                  [ { type: 'VariableDeclaration',
                      start: 0,
                      end: 39,
                      declarations:
                       [ { type: 'VariableDeclarator',
                           start: 4,
                           end: 38,
                           id: { type: 'Identifier', start: 4, end: 10, name: 'input1' },
                           init:
                            { type: 'CallExpression',
                              start: 13,
                              end: 38,
                              callee: { type: 'Identifier', start: 13, end: 19, name: 'prompt' },
                              arguments:
                               [ { type: 'Literal',
                                   start: 20,
                                   end: 37,
                                   value: 'Evil Dom Input!',
                                   raw: '\'Evil Dom Input!\'' } ] } } ],
                      kind: 'var',
                      previous: [],
                      next: [ [Circular] ] } ],
                 next: [ [Circular] ] } ],
            next: [ [Circular] ] } ],
       next: [] } ] }
